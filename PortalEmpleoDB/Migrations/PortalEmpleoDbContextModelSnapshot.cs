// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PortalEmpleoDB;

#nullable disable

namespace PortalEmpleoDB.Migrations
{
    [DbContext(typeof(PortalEmpleoDbContext))]
    partial class PortalEmpleoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OfertaDeEmpleoUsuario", b =>
                {
                    b.Property<int>("OfertaDeEmpleosOfertaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuariosPostuladosUsuarioId")
                        .HasColumnType("int");

                    b.HasKey("OfertaDeEmpleosOfertaId", "UsuariosPostuladosUsuarioId");

                    b.HasIndex("UsuariosPostuladosUsuarioId");

                    b.ToTable("OfertaDeEmpleoUsuario");
                });

            modelBuilder.Entity("PortalEmpleoDB.Empresa", b =>
                {
                    b.Property<int>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpresaId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tamaño")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpresaId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("PortalEmpleoDB.OfertaDeEmpleo", b =>
                {
                    b.Property<int>("OfertaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfertaId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaDePublicacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OfertaId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("OfertasDeEmpleo");
                });

            modelBuilder.Entity("PortalEmpleoDB.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("OfertaDeEmpleoUsuario", b =>
                {
                    b.HasOne("PortalEmpleoDB.OfertaDeEmpleo", null)
                        .WithMany()
                        .HasForeignKey("OfertaDeEmpleosOfertaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PortalEmpleoDB.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosPostuladosUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PortalEmpleoDB.OfertaDeEmpleo", b =>
                {
                    b.HasOne("PortalEmpleoDB.Empresa", "Empresa")
                        .WithMany("OfertasDeEmpleo")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("PortalEmpleoDB.Empresa", b =>
                {
                    b.Navigation("OfertasDeEmpleo");
                });
#pragma warning restore 612, 618
        }
    }
}
